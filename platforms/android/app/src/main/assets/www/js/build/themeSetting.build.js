"use strict";(self.webpackChunkcom_foxdebug_acode=self.webpackChunkcom_foxdebug_acode||[]).push([[236],{28319:function(e,t,n){n.r(t),n.d(t,{default:function(){return l}});var a=n(8187),s=n.n(a),i=n(53124),o=n(73305),r=n(79870),p=n(2802),c=n(50673),d=n(34325);function l(){const e=(0,o.Z)(strings.theme.capitalize()),t=s().parse("<div id='theme-setting' class='main'>\r\n  <div class='options'>\r\n    <span class='active' action='select' tabindex='0' value='app'>App</span>\r\n    <span\r\n      action='select'\r\n      value='editor'\r\n      tabindex='0'\r\n      value='editor'\r\n    >Editor</span>\r\n  </div>\r\n  <div id='theme-list' class='list scroll'></div>\r\n</div>",{}),a=s()("i",{className:"icon search",attr:{action:"search"}}),l=s()("div",{id:"theme-preview"});let m=ace.edit(l);function h(n="app"){let a=[],s="",o=()=>!1;"editor"===n&&.3*innerHeight>=120?t.append(l):l.remove(),"app"===n?(DOES_SUPPORT_THEME||(s='<div class="list-item"><span class="icon warningreport_problem"></span><div class="container"><span class="text">'+strings["unsupported device"]+"</span></div></div>"),a=r.Z.appThemeList,o=e=>appSettings.value.appTheme===e):"editor"===n&&(a=r.Z.editorThemeList,o=e=>appSettings.value.editorTheme===`ace/theme/${e}`);const p=Object.keys(a).sort();for(let e=0;e<p.length;++e){const t=p[e];let r=!1,c=!1;const d=a[t];"app"===n&&(r=IS_FREE_VERSION&&!d.isFree,c=!DOES_SUPPORT_THEME),s+=i.Z.render('<div class="list-item {{#disable}}disabled{{/disable}}" action="select-theme" tabindex="0" name="{{theme}}"\r\n  mode="{{mode}}" type="{{type}}">\r\n  <span class="icon color {{type}}"></span>\r\n  <div class="container">\r\n    <span class="text">{{name}}</span>\r\n  </div>\r\n  {{#default}}\r\n  <span class="icon check"></span>\r\n  {{/default}}\r\n  {{#paid}}\r\n  <span class="icon stars"></span>\r\n  {{/paid}}\r\n</div>',{name:t.replace(/_/g," ").capitalize(),theme:t,mode:n,type:d.type,default:o(t),disable:c,paid:r})}e.get("#theme-list").innerHTML=s}function u(t){const a=t.target;if(!(a instanceof HTMLElement))return;const s=a.getAttribute("action");if(s)switch(s){case"select":const t=e.get(".options>.active");t&&t.classList.remove("active"),a.classList.add("active"),h(a.getAttribute("value"));break;case"select-theme":const s=a.getAttribute("mode"),i=a.getAttribute("name");a.getAttribute("type"),"app"===s?function(e,t){const a=r.Z.appThemeList[e];a&&(a.isFree||!IS_FREE_VERSION?"custom"!==a.name?v("app",a.name):async function(...e){(0,(await n.e(787).then(n.bind(n,48417))).default)()}():c.Z.box(strings.info.toUpperCase(),"Hi dear user, dark modes are available in paid version of the app. Please support this project by buying the paid version.").onhide((()=>{system.openInBrowser(r.Z.PAID_VERSION)})))}(i):"editor"===s&&v("editor",i);break;case"search":(0,p.Z)(e.get("#theme-list"))}}function v(e,t){const n={};let a;if("app"===e)n.appTheme=t,a=appSettings.value.appTheme;else{if("editor"!==e)return;{const e="ace/theme/"+t;editorManager.editor.setTheme(e),m.setTheme(e),n.editorTheme=e,a=appSettings.value.editorTheme.split("/").pop()}}const i=s().get(`#theme-list>[name="${a}"]>.icon.check`);i&&i.remove(),appSettings.update(n),"app"===e&&window.restoreTheme(),s().get(`#theme-list>[name="${t}"]`).innerHTML+='<span class="icon check"></span>'}m.setTheme(appSettings.value.editorTheme),m.setFontSize(appSettings.value.fontSize),m.session.setOptions({mode:"ace/mode/javascript"}),m.setReadOnly(!0),m.session.setValue("function foo(){\n\tconst array = [1, 1, 2, 3, 5, 5, 1];\n\tconst uniqueArray = [...new Set(array)];\n\tconsole.log(uniqueArray);\n\tconsole.log(0.2 + 0.1 === 0.3);\n\tconsole.log('I love Acode editor')\n}\nfoo();"),m.gotoLine(8),l.append(s()("div",{id:"theme-preview-header"})),l.classList.add(appSettings.value.editorFont),m.resize(!0),actionStack.push({id:"appTheme",action:()=>{m.destroy(),e.hide(),e.removeEventListener("click",u)}}),e.onhide=()=>{d.Z.hideAd(),actionStack.remove("appTheme")},e.body=t,e.querySelector("header").append(a),app.append(e),d.Z.showAd(),e.addEventListener("click",u),h()}}}]);