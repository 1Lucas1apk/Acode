"use strict";(self.webpackChunkcom_foxdebug_acode=self.webpackChunkcom_foxdebug_acode||[]).push([[787],{48417:function(e,t,n){n.r(t),n.d(t,{default:function(){return d}});var s=n(8187),o=n.n(s),c=n(53124),a=n(73305),i=n(17712),r=n(34325),l=n(79870),m=n(24753),u=n(50673);function d(){const e=(0,a.Z)(`${strings.custom} ${strings.theme}`.capitalize());function t(){const t=appSettings.value.customTheme,n=Object.keys(t).map((e=>({color:e,value:t[e],text:e.replace(/-/g," ").trim()}))),s=c.Z.render("<div id='custom-theme' class='main'>\n  <div id='color-list' class='list scroll'>\n    {{#colors}}\n      <div\n        class='list-item'\n        action='set-color'\n        tabindex='0'\n        value='{{value}}'\n        name='{{color}}'\n      >\n        <style>\n          .{{color}}::before{ background-color:{{value}}!important; }\n        </style>\n        <span class='icon color {{color}}'></span>\n        <div class='container'>\n          <span class='text'>{{text}}</span>\n        </div>\n      </div>\n    {{/colors}}\n  </div>\n</div>",{colors:n}),a=e.get("#custom-theme");a&&a.remove(),e.body=o().parse(s)}function n(){o().get("#custom-theme").textContent=r.Z.jsonToCSS(l.Z.CUSTOM_THEME,appSettings.value.customTheme),window.restoreTheme()}e.header.append(o()("span",{className:"icon historyrestore",attr:{action:"reset-theme"},style:{color:"red"}}),o()("span",{className:"icon check",attr:{action:"set-theme"}})),t(),app.append(e),r.Z.showAd(),actionStack.push({id:"custom-theme",action:e.hide}),e.onhide=()=>{actionStack.remove("custom-theme"),r.Z.hideAd()},e.addEventListener("click",(function(s){const o=s.target;if(o instanceof HTMLElement){const s=o.getAttribute("action");if("set-theme"===s)return void(0,m.Z)(strings["theme type"],[["light",strings.light],["dark",strings.dark]]).then((t=>{appSettings.update({appTheme:"custom",customThemeMode:t}),n();const s=e.header.text;"*"===s.slice(-1)&&(e.header.text=s.slice(0,-1))}));if("set-color"===s){const n=o.getAttribute("name"),s=o.getAttribute("value");return void(0,i.Z)(s).then((s=>{appSettings.value.customTheme[n]=s,appSettings.update();const o=e.get("#custom-theme").scrollTop;t(),e.get("#custom-theme").scrollTop=o,"*"!==e.header.text.slice(-1)&&(e.header.text+=" *")}))}"reset-theme"===s&&u.Z.confirm(strings.info.toUpperCase(),strings["reset warning"]).then((e=>{e&&(appSettings.reset("customTheme"),t(),n())}))}}))}}}]);