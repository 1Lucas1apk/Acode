"use strict";(self.webpackChunkcom_foxdebug_acode=self.webpackChunkcom_foxdebug_acode||[]).push([[753],{69427:function(t,a,s){a.Z=function(...t){s.e(235).then(s.bind(s,91413)).then((a=>{(0,a.default)(...t)}))}},49209:function(t,a,s){s.r(a),s.d(a,{default:function(){return h}});var e=s(8187),n=s.n(e),i=s(53124),r=s(34325),o=s(94735),c=s(73305),l=s(67881),d=s(50673),p=s(15423),g=s(69427),u=s(17686),v=s(98206),f=s(65119),h=async function(t){let a;const e=n()("span",{className:"icon search hidden"}),h=(0,f.Z)("more_vert","toggle-menu"),{credentials:b}=r.Z,Z=p.Z.GitHub().getUser(),m=v.Z.join(DATA_STORAGE,".github"),w=v.Z.join(DATA_STORAGE,".git"),_=(0,l.Z)(i.Z.render("<li action='reload'>\r\n  <span class='text'>{{reload}}</span>\r\n  <span class='icon refresh'></span>\r\n</li>\r\n<li action='logout'>\r\n  <span class='text'>{{logout}}</span>\r\n  <span class='icon logout'></span>\r\n</li>",strings),{top:"8px",right:"8px",toggle:h,transformOrigin:"top right"});_.addEventListener("click",k);const y=(0,u.Z)(w);if(await y.exists()){const t=await y.readFile("utf-8"),a=r.Z.credentials.decrypt(t);A(r.Z.parseJSON(a))}else S();function k(t){const e=t.target,i=e.getAttribute("action");switch(["logout","reload"].includes(i)&&_.hide(),i){case"logout":G((()=>{toast(strings.success),a.hide()}));break;case"gist":(0,g.Z)();break;case"repos":s.e(314).then(s.bind(s,89686)).then((t=>{(0,t.default)()}));break;case"reload":S((function(t){let s=n().get("#github");s&&s.remove(),s=x(t),a.body=s,s.addEventListener("click",k)}));break;case"open":system.openInBrowser(e.getAttribute("data-value"))}}function A(s){a||(a=(0,c.Z)("Github"));const n=x(s);a.body=n,a.header.append(e,h),app.append(a),r.Z.showAd(),actionStack.push({id:"github",action(){r.Z.hideAd(),a.hide()}}),n.addEventListener("click",k),t&&t.hide()}async function S(a){d.Z.loader.create("GitHub",strings.loading+"...");try{const t=await Z.getProfile(),{data:s}=t,e=b.encrypt(JSON.stringify(s));try{const t=(0,u.Z)(w);if(!await t.exists()){const t=(0,u.Z)(DATA_STORAGE);await t.createFile(".git")}await t.writeFile(e)}catch(t){}"function"==typeof a?a(s):A(s)}catch(a){a.response.data?(console.error(a.response.data.message),401===a.response.status&&G(),t?t.setMessage(a.response.data.message):(0,o.Z)()):(t&&t.setMessage(a.response.statusText),G())}d.Z.loader.destroy()}function x(t){return t&&(t.total_repos=(t.total_private_repos??0)+t.public_repos,t.total_gists=(t.private_gists??0)+t.public_gists),n().parse(i.Z.render("<div class='main' id='github'>\r\n  <div class='profile'>\r\n    <img src='{{avatar_url}}' alt='avatar' />\r\n    <h2 class='info'>\r\n      <span class='name'>{{name}}</span>\r\n      <small class='login'>{{login}}</small>\r\n    </h2>\r\n    <div class='tags'>\r\n      <span class='tag' data-value='{{followers}}'>followers</span>\r\n      <span class='tag' data-value='{{following}}'>following</span>\r\n      <span class='tag' data-value='{{total_repos}}'>repositories</span>\r\n      <span class='tag' data-value='{{total_gists}}'>gists</span>\r\n    </div>\r\n    <div class='button-container primary'>\r\n      <button action='open' data-value='{{html_url}}'>open in browser</button>\r\n    </div>\r\n  </div>\r\n  <div class='list'>\r\n    <div class='list-item' action='gist'>\r\n      <span class='octicon octicon-gist'></span>\r\n      <div class='container'>\r\n        <span class='text'>Gists</span>\r\n      </div>\r\n    </div>\r\n    <div class='list-item' action='repos'>\r\n      <div class='octicon octicon-repo'></div>\r\n      <div class='container'>\r\n        <span class='text'>Repositories</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>",{...strings,...t}))}async function G(t){localStorage.username&&delete localStorage.username,localStorage.password&&delete localStorage.password,localStorage.token&&delete localStorage.token;try{await(0,u.Z)(w).delete(),await(0,u.Z)(m).delete()}catch(t){}t&&t()}}}}]);